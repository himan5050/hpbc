<?php
//global $base_url;

/**
 *hook_perm
 
 
 */
 
 function statementcumulativerecoveryreport_init() {
	//drupal_add_css(drupal_get_path('module', 'scstReports') .'/report_style.css');
	
}
 
function statementcumulativerecoveryreport_perm() {
	return array('edit statementcumulativerecoveryreport','administer statementcumulativerecoveryreport', 'create statementcumulativerecoveryreport', 'view statementcumulativerecoveryreport');
}

function statementcumulativerecoveryreport_access($op, $node, $account) {
	if($op == 'update' || $op == 'delete') {
		//&& ($account->uid == $node->uid)
		if (user_access('edit statementcumulativerecoveryreport', $account) ) {
			return TRUE;
		}
	}
	if (($op=='create') && ($op='list')) {
		return user_access('create statementcumulativerecoveryreport', $account);
	}
	if (($op=='view') or ($op=='list')) {
		return user_access('view statementcumulativerecoveryreport', $account);
	}
	
}


function statementcumulativerecoveryreport_menu(){

  $items['statementcumulativerecoveryreport'] = array(
										'title' => t('District Scheme-Wise Cumulative Recovery RPT'),
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'statementcumulativerecoveryreport',
										'access arguments' => array('administer statementcumulativerecoveryreport'),
													 
									  );
   
   return $items;
}



function statementcumulativerecoveryreport(){
  return drupal_get_form('statementcumulativerecoveryreport_form');
}

function statementcumulativerecoveryreport_form(){
	
global $base_url;

//breadcrumb
 $array = explode('/',$_GET['q']);
  $breadcrumb = array();
  $breadcrumb[] = l('Home', '<front>');
  $breadcrumb[] = l('Sector-wise Cumulative Recovery Statement', 'statementcumulativerecoveryreport');
  drupal_set_breadcrumb($breadcrumb);


$form['from_date'] = array(
 	                       '#type' => 'date_popup',
						   '#date_format' =>'d-m-Y',
						   '#title' => t(''),
						   '#required' => false,
						   '#size' => '30',
						   
						   
 );
 
 $form['to_date'] = array(
 	                       '#type' => 'date_popup',
						   '#date_format' =>'d-m-Y',
						   '#title' => t(''),
						    '#required' => false,
						   '#size' => '30',
						   
						   
		);				   
 	

 
 

 
 
						   
 
  $form['submit'] = array(
      '#type' =>'button',
	  '#default_value' =>'Generate',
  ); 
  return $form;
}


function statementcumulativerecoveryreport_form_validate($form, &$form_state){
	
	$values = $form_state['values'];
	
	$from_date = $values['from_date'];
	$to_date = $values['to_date'];
	
	if($from_date == ''){
		
	form_set_error('from_date','Form Date field is required.');	
		
	}
	
	if($to_date == ''){
		
	form_set_error('to_date','To Date field is required.');	
		
	}
	
}


/**
 *@ hook_theme 
*/

 function statementcumulativerecoveryreport_theme() {
	
	return array(
		
		'statementcumulativerecoveryreport_form' => array(
								'arguments' => array('form' => NULL),
								'template' => 'statementcumulativerecoveryreport_form',
                                 ),
			
			
								 
 );
        
}
