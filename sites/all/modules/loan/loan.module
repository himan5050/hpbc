<?php
function loan_init() {
	//drupal_add_css(drupal_get_path('module', 'loan') .'/loan.css');
      drupal_add_js(drupal_get_path('module','loan').'/loan.js');
	
}


function loan_perm() {
	return array('edit loan','administer loan', 'create loan', 'view loan');
}

function loan_access($op, $node, $account) 
{
	if($op == 'update' || $op == 'delete') {
		//&& ($account->uid == $node->uid)
		if (user_access('edit loan', $account) ) {
			return TRUE;
		}
	}
	if (($op=='create') && ($op='list')) {
		return user_access('create loan', $account);
	}
	if (($op=='view') or ($op=='list')) {
		return user_access('view loan', $account);
	}
	
}

function loan_menu() {
	
	if($arg[0] == 'onetime')
		$onetimetitle = 'One Time Settlement Form';
	else
		$onetimetitle = 'Repayment Form';
	$items['loan/schemewise_recovery'] = array(
										'title' => t('Scheme Wise Recovery Report'),
										'description' => 'schemewise recovery report',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'schemewise_recovery',
										'access arguments' => array('view loan'),
										'file' =>'schemewise_recovery.php',			 
													 
									  );
									  
	$items['loan/main_schemewise_recovery'] = array(
										'title' => t('Main Scheme Wise Recovery Report'),
										'description' => 'schemewise recovery report',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'main_schemewise_recovery',
										'access arguments' => array('view loan'),
										'file' =>'schemewise_recovery.php',			 
													 
									  );
	$items['loan/downloadfile/%'] = array(
										'title' => t('File download'),
										'description' => 'File download',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'downloadfile',
										 'page arguments' => array(2),
										'access arguments' => array('view loan'),
													 
									  );
	$items['loan/schemewiseoutstanding_recovery'] = array(
										'title' => t('Scheme Wise Outstanding Recovery Report'),
										'description' => 'schemewise outstanding recovery report',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'schemewise_outstanding_recovery',
										'access arguments' => array('view loan'),
										'file' =>'schemewise_recovery.php',			 
													 
									  );
	$items['loan/main_schemewise_outstanding_recovery'] = array(
										'title' => t('Main Scheme Wise Outstanding Recovery Report'),
										'description' => 'main schemewise recovery report',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'main_schemewise_outstanding_recovery',
										'access arguments' => array('view loan'),
										'file' =>'schemewise_recovery.php',			 
													 
									  );
	$items['loan/view_query/%/%'] = array(
										'title' => t('View Query'),
										'description' => 'View Query',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'view_query',
										'access arguments' => array('view loan'),
                                        'page arguments' => array(2,3),
													 
									  );
	$items['loan/quarterly_progress'] = array(
										'title' => t('Quarterly Progress Report'),
										'description' => 'quarterly progress report',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'quarterly_progress',
										'access arguments' => array('view loan'),
										'file' =>'schemewise_recovery.php',			 
													 
									  );
	$items['loan/blockscheme'] = array(
										'title' => t('Block'),
										'description' => 'Block Scheme',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'blockscheme',
										'access arguments' => array('view loan'),
										'file' =>'listscheme.inc',			 
													 
									  );
	$items['loan/listsettlement'] = array(
										'title' => t('One Time Settlement List'),
										'description' => 'User Can Pay One Time and Close The Account',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'listsettlement',
										'access arguments' => array('administer loan'),
										'file' =>'onetimesettlement.php',			 
													 
									  );
	$items['loan/listloans'] = array(
										'title' => t('List of Loan Applications'),
										'description' => 'User can see list of Loan Applications',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'list_loan_accounts',
										'access arguments' => array('view loan'),
													 
									  );
	$items['loan/view/%'] = array(
										'title' => t('View Loan'),
										'description' => 'Allow user to View Details of Loan Application ',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'view_loan1',
                                        'page arguments' => array(2),
										'access arguments' => array('view loan'),
										'file' =>'viewloan.inc',			 
									  );	

	$items['loan/accountdetail/%'] = array(
										'title' => t('View Loan Account Detail'),
										'description' => 'Allow user to View Loan scheme ',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'account_detail',
                                        'page arguments' => array(2),
										'access arguments' => array('view loan'),
										'file' =>'viewloan.inc',			 
									  );	

	$items['loan/disbursement/%'] = array(
										'title' => t('Loan Disbursments'),
										'description' => 'Allow Corporation to view Loan Disbursement',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'listdisbursment',
                                        'page arguments' => array(2),
										'access arguments' => array('administer loan'),
										'file' =>'disburse.inc',			 
									  );	
	$items['loan/disbursementdelete/%'] = array(
										'title' => t('Delete Loan Disbursments'),
										'description' => 'Delete',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'disbursementdelete',
                                        'page arguments' => array(2),
										'access arguments' => array('administer loan'),
										'file' =>'disburse.inc',			 
									  );	

	$items['loan/disbursementform/%/%'] = array(
										'title' => t('Disbursment Form'),
										'description' => 'Allow Corporation to Enter Disbursement Detail ',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'disbursmentform',
                                        'page arguments' => array(2,3),
										'access arguments' => array('administer loan'),
										'file' =>'disburse.inc',			 
									  );	

	$items['loan/uploadreport/%'] = array(
										'title' => t('Uplaod Report'),
										'description' => 'Allow user to upload report ',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'uploadreport',
                                        'page arguments' => array(2),
										'access arguments' => array('view loan'),
									  );	

	$items['loan/applyloan'] = array(
										'title' => t('Application Form for Loan'),
										'description' => 'User can apply for loan',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'apply_for_loan',
										'access callback' => true,
										'access arguments' => array('view loan'),
										'file' =>'loanapplicationform.inc',			 
									  );

	$items['loan/editloan/%'] = array(
										'title' => t('Edit Loan'),
										'description' => 'EDit loan',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'apply_for_loan',
										'access callback' => true,
                                        'page arguments' => array(2),
										'access arguments' => array('view loan'),
										'file' =>'loanapplicationform.inc',			 
									  );
	$items['loan/forward/%/%/%/%'] = array(
										'title' => t('Forward'),
										'description' => 'Forward loan application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'forward_application',
										'access callback' => true,
                                        'page arguments' => array(2,3,4,5),
										'access arguments' => array('view loan'),
									  );
									  
	$items['loan/query/%/%/%/%'] = array(
										'title' => t('Query'),
										'description' => 'Query loan application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'query_application',
										'access callback' => true,
                                        'page arguments' => array(2,3,4,5),
										'access arguments' => array('view loan'),
									  );

	$items['loan/comments/%'] = array(
										'title' => t('Comments'),
										'description' => 'Comments on application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'loan_comments',
										'access callback' => true,
                                        'page arguments' => array(2),
										'file' =>'comment.inc',			 
										'access arguments' => array('view loan'),
									  );
									  
	$items['loan/pendingcomments/%'] = array(
										'title' => t('Pending Comments'),
										'description' => 'Comments on application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'pendingcomments',
										'access callback' => true,
                                        'page arguments' => array(2),
										'file' =>'comment.inc',			 
										'access arguments' => array('view loan'),
									  );

	$items['loan/commentform/%'] = array(
										'title' => t('Comment Entry Form'),
										'description' => 'Comments on application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'commentform',
										'access callback' => true,
                                        'page arguments' => array(2),
										'file' =>'comment.inc',			 
										'access arguments' => array('view loan'),
									  );

	$items['loan/replycomment/%'] = array(
										'title' => t('Reply Comment'),
										'description' => 'Reply to Comment',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'replycomment',
										'access callback' => true,
                                        'page arguments' => array(2),
										'file' =>'comment.inc',			 
										'access arguments' => array('view loan'),
									  );

	$items['loan/closecomment/%'] = array(
										'title' => t('Close Comment'),
										'description' => 'Close Comments',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'closecomment',
										'access callback' => true,
                                        'page arguments' => array(2),
										'file' =>'comment.inc',			 
										'access arguments' => array('view loan'),
									  );

	$items['loan/approve_reject_application/%/%/%/%'] = array(
										'title' => t('Approve or Reject Application'),
										'description' => 'Approve or Reject Application',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'approve_reject_application',
										'access callback' => true,
                                        'page arguments' => array(2,3,4,5),
										'access arguments' => array('loan'),
									  );
									  
	$items['loan/generate_sanction_letter/%/%/%/%'] = array(
										'title' => t('Generate Sanction Letter'),
										'description' => 'Generate Sanction Letter',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'generate_sanction_letter',
										'access callback' => true,
                                        'page arguments' => array(2,3,4,5),
										'access arguments' => array('loan'),
									  );
									  
	$items['loan/processagreement/%/%/%/%'] = array(
										'title' => t('Process agreement'),
										'description' => 'Process agreement & collect document',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'processagreement',
										'access callback' => true,
                                        'page arguments' => array(2,3,4,5),
										'access arguments' => array('loan'),
									  );
	$items['loan/gettehsils'] = array(
										'description' => 'Get Tehsils',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'getTehsils',
										'access arguments' => array('loan'),
										'file' =>'loanapplicationform.inc',			 
									  );
									  
									  
	$items['loan/listscheme'] = array(
										'title' => t('List of Loan schemes'),
										'description' => 'Allow user to View Loan scheme list',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'list_loan_schemes',
										'access arguments' => array('edit loan'),
										'file' =>'listscheme.inc',			 
									  );	
	$items['loan/viewscheme/%'] = array(
										'title' => t('View Loan scheme'),
										'description' => 'Allow user to View Loan scheme ',
										'type' => MENU_NORMAL_ITEM,
										'page callback' => 'view_loan_scheme',
                                        'page arguments' => array(2),
										'access arguments' => array('edit loan'),
										'file' =>'listscheme.inc',			 
									  );	
	$items['loan/addscheme'] = array(
										'title' => t('Create Loan scheme'),
										'description' => 'Allow user to add Loan scheme',
										'type' => MENU_CALLBACK,
										'page callback' => 'addeditscheme',
										'access arguments' => array('administer loan'),
										'file' =>'addeditscheme.inc',			 
									  );
   	$items['loan/editscheme/%'] = array(
								
										'title' => t('Edit Loan scheme'),
										'description' => 'Allow user to edit Loan scheme',
										'type' => MENU_CALLBACK,
										'page callback' => 'addeditscheme',
                                        'page arguments' => array(2),
		                                'access arguments' => array('administer loan'),
										'file' =>'addeditscheme.inc',			 
									  );
     $items['loan/repaymentform/%'] =  array(
										'title' => t('Repayment Form'),
										'type' => MENU_CALLBACK,
										'page callback' => 'repayment_form',
		                                'page arguments' => array(2),
		                                'access arguments' => array('administer loan'),
										'file' =>'repayment.php',			 
													 
									  );
     $items['loan/repayment'] =  array(
										'title' => t('List of Repayments'),
										'type' => MENU_CALLBACK,
										'page callback' => 'listrepayments',
		                                'access arguments' => array('administer loan'),
										'file' =>'repayment.php',			 
									  );
     $items['loan/repayment/%'] =  array(
										'title' => t('List of Repayments'),
										'type' => MENU_CALLBACK,
										'page callback' => 'listrepayment',
		                                'page arguments' => array(2),
		                                'access arguments' => array('administer loan'),
										'file' =>'repayment.php',			 
									  );
     $items['loan/showamortisation'] =  array(
										'type' => MENU_CALLBACK,
										'page callback' => 'amortisationf',
		                                'access arguments' => array('view loan'),
										'file' =>'amortisation.php',			 
									  );
     $items['loan/amortisation/%'] =  array(
										'type' => MENU_CALLBACK,
										'page callback' => 'amortisation',
		                                'page arguments' => array(2),
		                                'access arguments' => array('administer loan'),
										'file' =>'amortisation.php',			 
									  );
    $items['loan/enable/scheme/%/%'] =  array(
										'type' => MENU_CALLBACK,
										'page callback' => 'scheme_enable',
		                                'page arguments' => array(4,5),
		                                'access arguments' => array('administer loan'),
													 
									  );
									  
    $items['loan/ld_othercharges'] =  array(
										'title' => t('LD and Other charges'),
										'type' => MENU_CALLBACK,
										'page callback' => 'ld_othercharges',
		                                'access arguments' => array('administer loan'),
										'file' =>'amortisation.php',			 
									  );
									  
    $items['loan/pendingvouchers'] =  array(
										'title' => t('Pending Vouchers'),
										'type' => MENU_CALLBACK,
										'page callback' => 'pendingvouchers',
		                                'access arguments' => array('administer loan'),
										'file' =>'pendingvouchers.php',			 
									  );
									  
    $items['loan/voucher_detail/%/%'] =  array(
										'title' => t('Voucher Detail'),
										'type' => MENU_CALLBACK,
										'page callback' => 'voucher_detail',
		                                'access arguments' => array('administer loan'),
		                                'page arguments' => array(2,3),
										'file' =>'pendingvouchers.php',			 
									  );
									  
    $items['loan/addROI/%'] =  array(
										'title' => t('Add Loan Class'),
										'type' => MENU_CALLBACK,
										'page callback' => 'addROI',
		                                'page arguments' => array(2),
		                                'access arguments' => array('view loan'),
													 
									  );
    $items['loan/close_loan/%'] =  array(
										'type' => MENU_CALLBACK,
										'page callback' => 'close_loan',
		                                'page arguments' => array(2),
		                                'access arguments' => array('view loan'),
													 
									  );
    $items['loan/getReceipt/%/%'] =  array(
										'title' => t('Payment Reciept'),
										'type' => MENU_CALLBACK,
										'page callback' => 'getReceipt',
		                                'access arguments' => array('administer loan'),
		                                'page arguments' => array(2,3),
										'file' =>'repayment.php',			 
									  );
									  
	return $items;
}



function downloadfile($file = '',$dir = '')
{
	global $base_path;
	if($dir)
		$dir = $dir.'/';
	$path_info = pathinfo('sites/default/files/loan/'.$dir.$file);
	$ext = $path_info['extension'];
	//echo $_SERVER['DOCUMENT_ROOT'].'scst/sites/default/files/loan/'.$file;exit;
	if(is_file('sites/default/files/loan/'.$dir.$file))
	{
		 $size = filesize($file);
		 $name = rawurldecode($file);
 
		 /* Figure out the MIME type (if not specified) */
		 $known_mime_types=array(
		    "pdf" => "application/pdf",
		    "txt" => "text/plain",
		    "html" => "text/html",
		    "htm" => "text/html",
		    "zip" => "application/zip",
		    "doc" => "application/msword",
		    "docx" => "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
		    "xls" => "application/vnd.ms-excel",
		    "ppt" => "application/vnd.ms-powerpoint",
		    "gif" => "image/gif",
		    "png" => "image/png",
		    "jpeg"=> "image/jpg",
		    "jpg" =>  "image/jpg",
		    "php" => "text/plain"
		 );
 
		 if($mime_type==''){
		     $file_extension = $ext;
		     if(array_key_exists($file_extension, $known_mime_types)){
			$mime_type=$known_mime_types[$file_extension];
		     } else {
			$mime_type="application/force-download";
		     };
		 };
 
		 @ob_end_clean(); //turn off output buffering to decrease cpu usage
 
		 header('Content-Type: ' . $mime_type);
		 header('Content-Disposition: attachment; filename="'.$file.'"');
		 readfile('sites/default/files/loan/'.$dir.$file);
 
 /* required for IE, otherwise Content-Disposition may be ignored
         if(ini_get('zlib.output_compression'))
               ini_set('zlib.output_compression', 'Off');
 
         header("Content-Transfer-Encoding: binary");
         header('Accept-Ranges: bytes');*/
 
 /* The three lines below basically make the
    download non-cacheable */
 //header("Cache-control: private");
// header('Pragma: private');
 //header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
 
 }else{
		form_set_error('h','Invalid file download.');
		drupal_goto('loan/listloans');
	}
}

function close_loan($loan_id)
{
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = 'Close Loan Case';
	drupal_set_breadcrumb($breadcrumb);
	if(isset($_POST['loan_id']))
	{
		db_query('START TRANSACTION');
		db_query('BEGIN');
		$loan_id = $_POST['loan_id'];
		$query = "SELECT * FROM tbl_loan_detail WHERE loan_id = $loan_id LIMIT 1";
		$res = db_query($query);
		$row = db_fetch_object($res);
		$obalance = round(($row->o_principal + $row->o_interest + $row->o_LD + $row->o_other_charges) - $row->weaver);
		if(!$obalance)
		{
			$sql = "UPDATE tbl_loan_detail SET closed_date = '".date("Y-m-d")."',loan_status = 0,remark = '".$_POST['remark']."' WHERE loan_id = '".$loan_id."'";
			if(!db_query($sql))
				$inserterror = 1;
			$message = "Loan account successfully closed";
		}else{
			$message = "The account can not be closed.";
		}
		$sql = "UPDATE tbl_workflow_task SET status = 1 WHERE status = 0 AND doc_id = '".$row->loan_docket."'";
		if(!db_query($sql))
			$inserterror = 1;
		if($inserterror)
		{
			db_query('ROLLBACK');
			$message = "There is some error in updating data.Please try again";
			//drupal_goto('loan/repayment/'.$loan_id);
		}else{
			db_query('COMMIT');
		}
		drupal_set_message($message);
		drupal_goto('loan/listloans/');
	}
	$output = <<<EOD
	<div id="errorid" class="messages error" style="display:none;"></div>
	<div id="form-container">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
	
	<form action="" name="addschemeform" method="post" enctype="multipart/form-data">
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Remark</h2></td>   
	
	</tr>
	<tr class="evenrow">
	
		<td class="form-text1"><div class="loantext1">Remark: <span title="This field is required." class="form-required">*</span></div>   		<div class="loanform"><div class='form-item'><textarea name="remark" id="remarkid" cols="15" rows="5" onkeypress="return textonlywithdotnemax(event,'remarkid','200');" maxlength="200"></textarea></div></div></td>
	
	</tr>
	<tr class="oddrow"><input type="hidden" value="$level" name="level">
	<input type="hidden" value="$status" name="status">
	<input type="hidden" value="$docket" name="docket">
	<input type="hidden" value="$taskid" name="taskid">
	<input type="hidden" value="$loan_id" name="loan_id">
	<td class="back" align="center">
	<input type="submit" class="form-submit" value="Submit" id="submit" name="ls" onclick="return validateRemark();"/>&nbsp;&nbsp;
EOD;
		$output .= l("Back",'loan/listloans/');
$output .= <<<EOD
</td></tr></table>	
	</form>
	</div>
EOD;
return $output;
}


function account_detail($accno = ''){
 return drupal_get_form('account_search_form');
}

function account_search_form() {
	$array = explode('/',$_GET['q']);
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of District', 'dsje/listdistrict');
	if($array[2] == 'adddistrict'){
		$breadcrumb[] = l('Add District', 'dsje/listdistrict/adddistrict');
	}

	drupal_set_breadcrumb($breadcrumb);
	$form['account_number'] = array(
		'#type' => 'textfield',
		'#size' => '45',
		'#title' => t('Account Number'),
		'#required' => TRUE,
		'#default_value' => '',
		'#maxlength'=>45,
	);
	$form['cancel'] = array(
		'#type' => "markup",
		'#value' => l(t('Back'), 'loan/listloans')
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#default_value' => t('Save')
	);
	return $form;
}


//************************ UPLOAD REPORT BY FEILD OFFICER FOR A LOAN APPLICATION ******************
function uploadreport($level = '',$status = '',$docket = '',$task = '',$rep='')
{
	$output = '';
	if(isset($_FILES['report']))
	{
		if(!$_FILES['report']['name'])
		{
			form_set_error('report', t('Report is mandatory.'));
			$output .=  '<script>$(function() {$("input[name=report]").addClass("error");});</script>';
		}else{
			
			
			$extension = fileexts($_FILES['report']['name']);
			
			if($extension == '.pdf' || $extension == '.zip' || $extension == '.rar'|| $extension == '.doc'|| $extension == '.txt' || $extension == '.docx' || $extension == '.xls' || $extension == '.xlsx' || $extension == '.ppt' || $extension == '.pptx')
			{
			$docket=$_POST['docket'];
			$path_info = pathinfo($_FILES['report']['name']);
			$ext = $path_info['extension'];
			@chmod('sites/default/files/loan','0777');
			$filename = 'VREPORT'.$docket.'.'.$ext;
			
			
			if(is_file('sites/default/files/loan/'.$filename))
				@unlink('sites/default/files/loan/'.$filename);
							
			@move_uploaded_file($_FILES['report']['tmp_name'],'sites/default/files/loan/'.$filename);
			db_query('START TRANSACTION');
			db_query('BEGIN');
			$inserterror = 0;
			$loanupdatesql = "UPDATE tbl_loan_detail SET application_report = '".$filename."' WHERE loan_docket = $docket";
			if(!db_query($loanupdatesql))
				$inserterror = 1;
			if($inserterror)
			{
				db_query('ROLLBACK');
				drupal_set_message("There is some error while updation.Please try again.");
			}else{
				db_query('COMMIT');
				drupal_set_message("Report successfully uploaded.");
				if(isset($_POST['uf']))
				{
					drupal_goto('loan/forward/'.$_POST['level'].'/'.$_POST['status'].'/'.$_POST['docket'].'/'.$_POST['task']);
				}else{
					drupal_goto('loan/listloans');
				}
			}
			//drupal_goto('loan/listloans');
			}
			
			else{
				
			form_set_error('report','Please upload file with extension .pdf,.zip.rar,doc,txt,docx,xls,ppt,xlsx,pptx');	
			$output .=  '<script>$(function() {$("input[name=report]").addClass("error");});</script>';
				
			}
			}
			
		
	}
		$array = explode('/',$_GET['q']);
		
		$breadcrumb = array();
		$breadcrumb[] = l('Home', '<front>');
		$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
		if($array[1] == 'uploadreport'){
			$breadcrumb[] = 'Upload Report';
		  }
		 drupal_set_breadcrumb($breadcrumb);
	$loan_id = getLoanIdDocket($docket);

$output .= <<<EOD
	<div id="errorid" class="messages error" style="display:none;"></div>
	<div id="form-container">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
	<br>
	<form action="" name="addschemeform" method="post" enctype="multipart/form-data" onsubmit="return reportValidation();">
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Spot Verification Report Upload</h2></td>   
	
	</tr>
	
	<tr class="evenrow">
		<td><div class="loantext1">Report: <span title="This field is required." class="form-required">*</span></div>
		<div class="loanform"><div class='form-item'><input type="file" size="40" id="reportuploadid" class="form-file" name="report"/> <br />Please upload file with extension .pdf,zip,rar,doc,txt,docx,xls,ppt,xlsx,pptx</div></div></td>
	</tr>
	<tr class="oddrow"><td class="back" align="center">
	<input type="hidden" value="$docket" name="docket">
	<input type="hidden" value="$level" name="level">
	<input type="hidden" value="$status" name="status">
	<input type="hidden" value="$task" name="task">
	<input type="hidden" value="$rep" name="rep" id="repid">
	<input type="submit" class="form-submit" value="Upload" id="submit" name="ls"/>
	<input type="submit" class="form-submit" value="Upload And Forward" id="submit" name="uf"/>&nbsp;&nbsp;
	
EOD;
	$output .= l("Back",'loan/listloans/');
$output .= <<<EOD
	</td></tr>
	</table></form>
	</div>
EOD;
	return $output;
}

//************************ QUERY FOR A LOAN APPLICATION ******************
function view_query($loan_id = '',$taskid='')
{
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = 'View Query';
	drupal_set_breadcrumb($breadcrumb);
	$viewstmt = "SELECT comment,assignedbyuid FROM tbl_workflow_task WHERE task_id = ".$taskid;
	$res = db_query($viewstmt);
	$c = db_fetch_object($res);
	$assignedby = getUser($c->assignedbyuid);
	$output = getLoanDetail($loan_id);
	$output .= '<br>
	
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Query Detail</h2></td>   
	
	</tr>
	<tr class="evenrow">
		<td width="50%">Query: </td>
		<td class="normal">
			'.$c->comment.'
			<div id="allshareid">
		</td>
	</tr>
	<tr class="oddrow">
		<td>Assigned By: </td>
		<td class="normal">
		'.$assignedby.'</td>
	</tr>
	<tr class="evenrow">
		<td colspan="2" align="center" class="back">'.l("Back","loan/listloans/").'</td>
	</tr>
	</table>';
	
	return $output;
}
//************************ QUERY FOR A LOAN APPLICATION ******************

function query_application($level=1,$status=1,$docket=0,$taskid=0)
{
	global $user;
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = 'Send Query';
	 drupal_set_breadcrumb($breadcrumb);
	 $output =  '';
	if(!validTask($level,$docket,$taskid))
	{
		form_set_error('status','You are not authorised to do this action.');
		drupal_goto('loan/listloans');
	}
	if( !is_Numeric($level) || !is_Numeric($status) || !is_Numeric($docket) || !is_Numeric($taskid) )
	{
		form_set_error('status','Invalid action.');
		drupal_goto('loan/listloans');
	}
	if(isset($_POST['comment']) && $_POST['level'] && $_POST['status'] && $_POST['docket'] && $_POST['taskid'])
	{
		if(!trim($_POST['comment'],'\b\t'))
		{
			form_set_error('comment','Query field is required.');
			$output .=  '<script>$(function() {$("textarea[name=comment]").addClass("error");});</script>';
		}else{
			db_query('START TRANSACTION');
			db_query('BEGIN');
			$inserterror = 0;
			$inserterror = createTask($level,$docket, $_POST['comment'],'',$user->uid);
			//$tasksql = "INSERT INTO tbl_workflow_task (level, doc_id, comment) VALUES ($level,$docket, '".$_POST['comment']."')";
			//if(!db_query($tasksql))
				//$inserterror = 1;
			$inserterror = updateTask($taskid);
			//$taskupdatesql = "UPDATE tbl_workflow_task SET status = 1 WHERE task_id = $taskid";
			//if(!db_query($taskupdatesql))
				//$inserterror = 1;
			$loanupdatesql = "UPDATE tbl_loan_detail SET loan_status = $status WHERE loan_docket = $docket";
			if(!db_query($loanupdatesql))
				$inserterror = 1;
			if($inserterror)
			{
				db_query('ROLLBACK');
				drupal_set_message("There is some error while updation.Please try again.");
			}else{
				db_query('COMMIT');
				$regno = getRegNumber(getLoanIdDocket($docket));
				drupal_set_message("You have successfully send a query against loan reg. no.  $regno .");
			}
			drupal_goto('loan/listloans');
		}
	}
	$loan_id = getLoanIdDocket($docket);
		$output .= <<<EOD
		<br>
		<div id="form-container">
			<form action="" name="commentform" method="post" enctype="multipart/form-data" onSubmit="return commentValidation();">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
		<br>
				<table width="100%" cellpadding="2" cellspacing="1" border="0" id="form-container">
				
					<tr class="evenrow">					
						<td align="center"><h2>Write your query here</h2></td>   					
					</tr>
					<tr class="oddrow">
						<td width="50%"><div class="loantext1">Query <span title="This field is required." class="form-required">*</span></div>
						<div class="form-text1">
						<div class='form-item'><textarea name="comment" id="commentid" rows="5" cols="30" maxlength="200" onkeypress="return textonlywithdotnemax(event,'commentid',200);"></textarea></div>
						</div>
						</td>
					</tr>
						<tr class="evenrow">					
						<td class="back" align="center"><input type="hidden" value="$level" name="level">
				<input type="hidden" value="$status" name="status">
				<input type="hidden" value="$taskid" name="taskid">
				<input type="hidden" value="$docket" name="docket">
				
EOD;
                $output .= l("Back",'loan/listloans');
$output .= <<<EOD
				
				&nbsp;&nbsp;<input type="submit" class="form-submit" value="Save" id="submit" name="ls"/></td>   					
					</tr>
				</table>
				
			</form>
		</div>
EOD;
	return $output;
}

function addROI($docket='')
{
	global $user;
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = "Loan Class Form";
	drupal_set_breadcrumb($breadcrumb);
		$roi = '';
		$sqlr = "SELECT ROI,loan_id FROM tbl_loan_detail WHERE loan_docket = ".$docket;
		$res = db_query($sqlr);
		$ld = db_fetch_object($res);
		if($ld->ROI != '0.00')
			$roi = $ld->ROI;
	if(isset($_POST['ROI']) && $_POST['docket'])
	{
		if(!$_POST['ROI'])
		{
			form_set_error('ROI', t('Interest class is required.'));
		}else{
			$tasksql = "UPDATE tbl_loan_detail SET ROI = '".$_POST['ROI']."' WHERE loan_docket = ".$_POST['docket'];
			if(db_query($tasksql))
			{
				if($roi)
					drupal_set_message("Loan class successfully modified.");
				else
					drupal_set_message("Loan class successfully implemented.");
				drupal_goto('loan/listloans');
			}
		}
	}else{
		$output = <<<EOD
		<br>
		<div id="errorid" class="messages error" style="display:none;"></div>
		<div id="form-container">
EOD;
		
		$output .= getLoanDetail($ld->loan_id);
		
		$output .= <<<EOD
			<br>
			<form action="" name="roiform" method="post" enctype="multipart/form-data" onSubmit="return roiValidation();">
				<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
				
					<tr class="oddrow">
					
						<td align="center" colspan=2><h2>Select Loan Class</h2></td>   
					
					</tr>
					<tr class="evenrow">
						<td><div class="loantext1">Class: <span title="This field is required." class="form-required">*</span></div>
						<div class="loanform"><select name="ROI" id="roi" onchange="getroi(this.value);">
						<option value="">Select</option>
EOD;
		$sql = "SELECT sc.class,sc.ROI FROM tbl_loan_detail ld, tbl_scheme_master sm,tbl_scheme_class sc WHERE ld.scheme_name = sm.loan_scheme_id AND sm.loan_scheme_id = sc.scheme_id AND ld.loan_docket = $docket ORDER BY sc.class";
		$res = db_query($sql);
		while($sc = db_fetch_object($res))
		{
			$selected = '';
			if($roi  == $sc->ROI)
				$selected = ' selected = "selected" ';
			$output .= '<option value="'.$sc->ROI.'"'.$selected.'>'.ucwords($sc->class).'</option>';
		}
		$output .= <<<EOD
						</select><div id="roiid"></div>
						</div></td>
					</tr>
					<tr class="oddrow"><td class="back" colspan="2" align="center">
EOD;
                $output .= l("Back",'loan/listloans/');
$output .= <<<EOD
					&nbsp;&nbsp;<input type="submit" class="form-submit" value="Save" id="submit" name="ls"/>
				</td></tr>
				</table>
				<input type="hidden" value="$docket" name="docket">
				
			</form>
		</div>
EOD;
	return $output;
	}
}

//********************************* FORWARD LOAN APPLICATION TO NEXT LEVEL ***************************

function forward_application($level=1,$status=1,$docket='',$taskid='')
{
	global $user;
	db_query('START TRANSACTION');
	db_query('BEGIN');
	if(!validTask($level,$docket,$taskid))
	{
		form_set_error('status','You are not authorised to do this action.');
		drupal_goto('loan/listloans');
	}else{
		$sql = "SELECT loan_status,reg_number FROM tbl_loan_detail WHERE loan_docket = $docket";
		$res = db_query($sql);
		$st = db_fetch_object($res);
		if($st->loan_status != 18)
			$status = $status + 1;
			
		if(!db_query($sql))
			$inserterror = 1;
		$inserterror = 0;
		$inserterror = createTask($level,$docket,'','',$user->uid);
		//$tasksql = "INSERT INTO tbl_workflow_task (level, doc_id) VALUES ($level,$docket)";
		//if(!db_query($tasksql))
			//$inserterror = 1;
		$inserterror = updateTask($taskid);
		//$taskupdatesql = "UPDATE tbl_workflow_task SET status = 1 WHERE task_id = $taskid";
		//if(!db_query($taskupdatesql))
			//$inserterror = 1;
		$loanupdatesql = "UPDATE tbl_loan_detail SET loan_status = $status WHERE loan_docket = $docket";
		if(!db_query($loanupdatesql))
			$inserterror = 1;
		if(($level - 1) == 1) //IF FIELD OFFICER THEN UPDATE PHYSICAL VERIFICATION DATE IN LOAN_DETAIL TABLE
		{
			$loanupdatesql = "UPDATE tbl_loan_detail SET physical_verification_date = CURDATE() WHERE loan_docket = $docket";
			if(!db_query($loanupdatesql))
				$inserterror = 1;
		}
		if($inserterror)
		{
			db_query('ROLLBACK');
			drupal_set_message("There is some error while updation.Please try again.");
		}else{
			drupal_set_message("Loan case '".$st->reg_number."' successfully forwarded.");
			$sql = "SELECT corp_branch FROM tbl_workflow_docket WHERE doc_id = '".$docket."'";
			$re = db_query($sql);
			$b = db_fetch_object($re);
			switch($status)
			{
				case 2:
					$parameter = '';
					$nameemail = unserialize(getNameEmail($b->corp_branch,13));
					$to = 'puspanjali.mohanty@claritusconsulting.com';//$nameemail[0];
					$name = ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme = ucwords($l[1]);
					$ROI = $l[3];
					$applicant = ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('DM_verification',$to,'',$parameter);
				break;
				case 3:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',18));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('HOD_verification',$to,'',$parameter);
				break;
				case 4:
					$parameter = '';
					$nameemail = unserialize(getNameEmail($b->corp_branch,37));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('generate_sanction_letter',$to,'',$parameter);
				break;
				case 5:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',18));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('sanction_letter_verification_by_hod',$to,'',$parameter);
				break;
				case 6:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',19));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('GM_verification',$to,'',$parameter);
				break;
				case 7:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',6));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('MD_verification',$to,'',$parameter);
				break;
				case 8:
					$parameter = '';
					$nameemail = unserialize(getNameEmail($b->corp_branch,13));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('process_agreement',$to,'',$parameter);
				break;
				case 11:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',18));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('document_verification_by_HOD',$to,'',$parameter);
				break;
				case 12:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',19));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('document_verification_by_GM',$to,'',$parameter);
				break;
				case 13:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',6));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('document_verification_by_MD',$to,'',$parameter);
				break;
				case 14:
					$parameter = '';
					$nameemail = unserialize(getNameEmail($b->corp_branch,13));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('payment_order_released',$to,'',$parameter);
				break;
				case 16:
					$parameter = '';
					$nameemail = unserialize(getNameEmail('',19));
					$to = $nameemail[0];
					$name =  ucwords($nameemail[1]);
					$l = unserialize(getLoanDetail('',1,$docket));
					$address = $l[0];
					$loanamount = $l[2];
					$scheme =  ucwords($l[1]);
					$ROI = $l[3];
					$applicant =  ucwords($l[4]);
					$mobile = $l[5];
					$reg_number = $l[6];
					$branch = $l[7];
					$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
					createMail('approvedby_DM',$to,'',$parameter);
				break;
			}
			db_query('COMMIT');
		}
	}
	drupal_goto('loan/listloans');
}

//********************************* APPROVE/REJECT LOAN APPLICATION ***************************

function approve_reject_application($status=1,$docket='',$taskid='',$level='')
{
	global $user;
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = "Add Remark Form";
	drupal_set_breadcrumb($breadcrumb);
	$actionstr = '';
	
	if(!validTask($level,$docket,$taskid))
	{
		form_set_error('status','You are not authorised to do this action.');
		drupal_goto('loan/listloans');
	}
	if(isset($_POST['status']))
	{
		$status= $_POST['status'];
		$docket=$_POST['docket'];
		$taskid=$_POST['taskid'];
		$level=$_POST['level'];
		$append = '';
	db_query('START TRANSACTION');
	db_query('BEGIN');
	$inserterror = 0;
	if($level)
	{
		$inserterror = createTask($level,$docket,'','',$user->uid);
		//$tasksql = "INSERT INTO tbl_workflow_task (level, doc_id) VALUES ($level,$docket)";
		//if(!db_query($tasksql))
			//$inserterror = 1;
	}
	$inserterror = updateTask($taskid);
	//$taskupdatesql = "UPDATE tbl_workflow_task SET status = 1 WHERE task_id = $taskid";
	//if(!db_query($taskupdatesql))
		//$inserterror = 1;
	if($status == 8 || $status == 16)
	{
		$append .= " ,sanction_date = CURDATE() ";
		$actionstr = 'Approved';
		$l = unserialize(getLoanDetail('',1,$docket));
		$address = $l[0];
		$loanamount = $l[2];
		$scheme =  ucwords($l[1]);
		$ROI = $l[3];
		$applicant =  ucwords($l[4]);
		$mobile = $l[5];
		$reg_number = $l[6];
	}
	if($status == 14 || $status == 16)
	{
		$sql = "SELECT loan_requirement FROM tbl_loan_detail WHERE loan_docket = $docket LIMIT 1";
		$res = db_query($sql);
		$loanamount = db_fetch_object($res);
		$append .= " ,payment_order_released_date = CURDATE(),o_disburse_amount = '".$loanamount->loan_requirement."' ";
	}
	$loanupdatesql = "UPDATE tbl_loan_detail SET loan_status = $status,remark = '".$_POST['remark']."' $append WHERE loan_docket = $docket";
	if(!db_query($loanupdatesql))
		$inserterror = 1;
		
//******** IF PAYMENT ORDER RELEASED SEND EMAIL *************

	if($status == 8)
	{
		$parameter = '';
		$nameemail = unserialize(getNameEmail($b->corp_branch,13));
		$to = $nameemail[0];
		$name =  ucwords($nameemail[1]);
		$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
		createMail('process_agreement',$to,'',$parameter);
		$nameemail = unserialize(getNameEmail($b->corp_branch,18));
		$to = $nameemail[0];
		$name =  ucwords($nameemail[1]);
		$parameter = json_encode(array("$name","$reg_number","$applicant","$mobile","$address","$loanamount","$scheme","$ROI"));
		createMail('process_agreement_HOD',$to,'',$parameter);
		
		//******** SEND EMAILS END	 *************
	}
	if($status == 8 || $status == 16)//SEND MAIL ON LOAN SANCTIONED 
	{
		$sql = "SELECT l.email, l.fname, l.lname FROM tbl_loanee_detail l, tbl_loan_detail ld WHERE ld.reg_number = l.reg_number AND ld.loan_docket = '".$docket."'";
		$res = db_query($sql);
		$l = db_fetch_object($res);
		$to = $l->email;
		$name = ucwords($l->fname.' '.$l->lname);
		$amount = number_format($_POST['amount'],2,'.','');
		$sanctioned_date = getSanctionedDate($loanid);
		$parameter = json_encode(array("$applicant","$applicant","$reg_number","$sanctioned_date","$amount","$ROI"));
		createMail('loan_sanctioned_direct',$to,'',$parameter);
	}
		//IF PAYMENT ORDER IS RELEASED( STATUS = 14 ) GENERATE EMI AND UPDATE LOAN_DETAIL TABLE
		if($status == 14 || $status == 16)
		{
			$sql = "SELECT ld.loan_amount,sm.tenure,ld.ROI FROM tbl_loan_detail ld, tbl_scheme_master sm WHERE ld.scheme_name = sm.loan_scheme_id AND ld.loan_docket = $docket";
			$res = db_query($sql);
			$em = db_fetch_object($res);
			
			$emi = getEMI($em->tenure,$em->ROI,$em->loan_amount);
			//$sql = "UPDATE tbl_loan_detail SET emi_amount = '".$emi."' WHERE loan_docket = $docket";
			//if(!db_query($sql))
				//$inserterror = 1;
			if($status == 14)
				$actionstr = 'Approved and Payment order released';
			$l = unserialize(getLoanDetail('',1,$docket));
			$mobile = $l[5];
			customsendsms($mobile,getMessage( 'loans', 'loan_collection', array("0"=>$em->loan_amount)));
		}
		if($status == 9 || $status == 15 || $status == 17)
			$actionstr = 'Rejected';
		if($inserterror)
		{
			db_query('ROLLBACK');
			drupal_set_message("There is some error while data updation.Please try again.");
		}else{
			drupal_set_message("Loan case ".getRegNumber(getLoanIdDocket($docket))." successfully $actionstr.");
			db_query('COMMIT');
		}
		drupal_goto('loan/listloans');
	}
	
	$loan_id = getLoanIdDocket($docket);
	$output = <<<EOD
	<div id="errorid" class="messages error" style="display:none;"></div>
	<div id="form-container">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
	<br/>
	<form action="" name="addschemeform" method="post" enctype="multipart/form-data">
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Remark</h2></td>   
	
	</tr>
	<tr class="evenrow">
	
		<td class="form-text1"><div class="loantext1">Remark: <span title="This field is required." class="form-required">*</span></div>   		<div class="loanform"><div class='form-item'><textarea name="remark" id="remarkid" cols="15" rows="5" maxlength="200" onkeypress="return textonlywithdotnemax(event,'remarkid',200);"></textarea></div></div></td>
	
	</tr>
	<tr class="oddrow"><input type="hidden" value="$level" name="level">
	<input type="hidden" value="$status" name="status">
	<input type="hidden" value="$docket" name="docket">
	<input type="hidden" value="$taskid" name="taskid">
	<td class="back" align="center">
	<input type="submit" class="form-submit" value="Submit" id="submit" name="ls" onclick="return validateRemark();"/>&nbsp;&nbsp;
EOD;
		$output .= l("Back",'loan/listloans/');
$output .= <<<EOD
</td></tr></table>	
	</form>
	</div>
EOD;
return $output;
}


//********************************* GENERATE SANCTION LETTER FOR LOAN ***************************

function generate_sanction_letter($level='', $status=1,$docket='',$taskid='')
{
	global $user;
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = "Generate Sanction Letter Form";
	drupal_set_breadcrumb($breadcrumb);
	$output = '';
	$loan_id = getLoanIdDocket($docket);
	$filename = '';
	if(!validTask($level,$docket,$taskid))
	{
		form_set_error('status','You are not authorised to do this action.');
		drupal_goto('loan/listloans');
	}
	if(!$loan_id)
	{
		form_set_error('sletter', t('Invalid url.'));
		drupal_goto('loan/listloans');
	}
	if(isset($_FILES['sletter']))
	{
		if(!$_FILES['sletter']['name'] && isset($_POST['ap']))
		{
			form_set_error('sletter', t('Sanction letter is mandatory.'));
			$output .=  '<script>$(function() {$("input[name=sletter]").addClass("error");});</script>';

		}else{
			
			$extension = fileexts($_FILES['sletter']['name']);
			if((isset($_POST['ap']) || isset($_POST['ls'])) && ($extension == '.pdf' || $extension == '.zip' || $extension == '.rar'|| $extension == '.doc'|| $extension == '.txt' || $extension == '.docx' || $extension == '.xls' || $extension == '.xlsx' || $extension == '.ppt' || $extension == '.pptx'))
			{
				$path_info = pathinfo($_FILES['sletter']['name']);
				$ext = $path_info['extension'];
				@chmod('sites/default/files/loan','0777');
				$filename = 'SAN'.$docket.'.'.$ext;
				if(is_file('sites/default/files/loan/'.$filename))
					@unlink('sites/default/files/loan/'.$filename);
								
				@move_uploaded_file($_FILES['sletter']['tmp_name'],'sites/default/files/loan/'.$filename);
				$loanupdatesql = "UPDATE tbl_loan_detail SET sletter = '".$filename."' WHERE loan_docket = $docket";
				if(!db_query($loanupdatesql))
					$inserterror = 1;
			}else{
				if(isset($_POST['ap']) || isset($_POST['ls']))
				{
					form_set_error('report','Please upload file with extension .pdf,.zip.rar,doc,txt,docx,xls,ppt,xlsx,pptx');		
					$output .=  '<script>$(function() {$("input[name=sletter]").addClass("error");});</script>';
					$error = 1;
				}
			}
			if(!isset($error))
			{
				if(isset($_POST['ls']))
				{
					$level=$_POST['level'];
					$status=$_POST['status'];
					$docket=$_POST['docket'];
					$taskid=$_POST['taskid'];
					$status = $status + 1;
					db_query('START TRANSACTION');
					db_query('BEGIN');
					$inserterror = 0;
					$inserterror = createTask($level,$docket,'','',$user->uid);
					//$tasksql = "INSERT INTO tbl_workflow_task (level, doc_id) VALUES ($level,$docket)";
					//if(!db_query($tasksql))
						//$inserterror = 1;
					$inserterror = updateTask($taskid);
					//$taskupdatesql = "UPDATE tbl_workflow_task SET status = 1 WHERE task_id = $taskid";
					//if(!db_query($taskupdatesql))
						//$inserterror = 1;
					$loanupdatesql = "UPDATE tbl_loan_detail SET loan_status = $status,remark = '".$_POST['remark']."', sletter = '".$filename."' WHERE loan_docket = $docket";
					if(!db_query($loanupdatesql))
						$inserterror = 1;
					if($inserterror)
					{
						db_query('ROLLBACK');
						drupal_set_message("There is some error while updation.Please try again.");
					}else{
						drupal_set_message("Sanction letter for loan application reg.no.".getRegNumber($loan_id)." has been generated and forwarded to HOD.");
						db_query('COMMIT');
						drupal_goto('loan/listloans');
					}
				}
				if(isset($_POST['ap'])){
					drupal_set_message("Sanction letter successfully generated.");
					drupal_goto('loan/approve_reject_application/16/'.$docket.'/'.$taskid.'/0');
				}
				if(isset($_POST['re'])){
					drupal_set_message("Loan application ".getRegNumber($loan_id)." has been rejected by DM.");
					drupal_goto('loan/approve_reject_application/17/'.$docket.'/'.$taskid.'/0');
				}
			}
		}
	
	}
$output .= <<<EOD
	<div id="errorid" class="messages error" style="display:none;"></div>
	<div id="form-container">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
	<br>
	<form action="" name="addschemeform" method="post" enctype="multipart/form-data">
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Sanction Letter Upload</h2></td>   
	
	</tr>
	
	<tr class="evenrow">
		<td class="form-text1"><div class="loantext1">Sanction Letter: <span title="This field is required." class="form-required">*</span></div>
		<div class="loanform"><div class='form-item'><input type="file" size="40" id="edit-upload" class="form-file" name="sletter"/> <br />Please upload file with extension .pdf,zip,rar,doc,txt,docx,xls,ppt,xlsx,pptx</div></div></td>
	</tr>
	<tr class="oddrow"><input type="hidden" value="$level" name="level">
	<input type="hidden" value="$status" name="status">
	<input type="hidden" value="$docket" name="docket">
	<input type="hidden" value="$taskid" name="taskid">
	<td class="back" align="center">
EOD;
	if($status == 16)
	{
$output .= <<<EOD
&nbsp;&nbsp;<input type="submit" class="form-submit" value="Save And Approve" id="submit" name="ap"/>&nbsp;&nbsp;
	<input type="submit" class="form-submit" value="Reject" id="submit" name="re"/>&nbsp;&nbsp;
EOD;
	$output .= l("Back",'loan/listloans/');
	}else{
		$output .= '<input type="submit" class="form-submit" value="Save And Forward" id="submit" name="ls"/>&nbsp;&nbsp;';
		$output .= l("Back",'loan/listloans/');
	}
$output .= <<<EOD
	</td></tr></table>	
	</form>
	</div>
EOD;
return $output;
}

//********************************* PROCESS AGREEMENT FOR LOAN ***************************

function processagreement($level=0, $status=1,$docket=0,$taskid=0)
{
	global $user;
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	$breadcrumb[] = l('List of Loan(s)', 'loan/listloans');
	$breadcrumb[] = "Process Aggrement Form";
	$output = '';
	$err = '';
	drupal_set_breadcrumb($breadcrumb);
	if(!validTask($level,$docket,$taskid))
	{
		form_set_error('status','You are not authorised to do this action.');
		drupal_goto('loan/listloans');
	}
	if( !is_Numeric($level) || !is_Numeric($status) || !is_Numeric($docket) || !is_Numeric($taskid) )
	{
		form_set_error('status','Invalid action.');
		drupal_goto('loan/listloans');
	}
	if(isset($_FILES['agreement']) && isset($_FILES['documents']))
	{
		if(!$_FILES['agreement']['name'] || !$_FILES['documents']['name'])
		{
			if(!$_FILES['agreement']['name'])
			{
				form_set_error('agreement','Agreement paper field is required.');
				$err .= '$("input[name=agreement]").addClass("error");';
			}
			if(!$_FILES['documents']['name'])
			{
				form_set_error('documents', 'Loanee Documents field is required.');
				$err .= '$("input[name=documents]").addClass("error");';
			}
		}else{
			
			$extension = fileexts($_FILES['agreement']['name']);
			$extension1 = fileexts($_FILES['documents']['name']);
			
			if(($extension == '.pdf' || $extension == '.zip' || $extension == '.rar'|| $extension == '.doc'|| $extension == '.txt' || $extension == '.docx' || $extension == '.xls' || $extension == '.xlsx' || $extension == '.ppt' || $extension == '.pptx') && ($extension1 == '.pdf' || $extension1 == '.zip' || $extension1 == '.rar'|| $extension1 == '.doc'|| $extension1 == '.txt' || $extension1 == '.docx' || $extension1 == '.xls' || $extension1 == '.xlsx' || $extension1 == '.ppt' || $extension1 == '.pptx'))
			{
			$append = '';
			$level=$_POST['level'];
			$status=$_POST['status'];
			$docket=$_POST['docket'];
			$taskid=$_POST['taskid'];
			$path_info = pathinfo($_FILES['agreement']['name']);
			$ext = $path_info['extension'];
			@chmod('sites/default/files/loan','0777');
			$filename = 'AGM'.$docket.'.'.$ext;
			if(is_file('sites/default/files/loan/'.$filename))
				@unlink('sites/default/files/loan/'.$filename);
							
			@move_uploaded_file($_FILES['agreement']['tmp_name'],'sites/default/files/loan/'.$filename);
			
			$path_info = pathinfo($_FILES['documents']['name']);
			$ext = $path_info['extension'];
			@chmod('sites/default/files/loan','0777');
			$dfilename = 'LDOC'.$docket.'.'.$ext;
			if(is_file('sites/default/files/loan/'.$dfilename))
				@unlink('sites/default/files/loan/'.$dfilename);
			@move_uploaded_file($_FILES['documents']['tmp_name'],'sites/default/files/loan/'.$dfilename);			
			db_query('START TRANSACTION');
			db_query('BEGIN');
			$inserterror = 0;
			$inserterror = createTask($level,$docket,'','',$user->uid);
			//$tasksql = "INSERT INTO tbl_workflow_task (level, doc_id) VALUES ($level,$docket)";
			//if(!db_query($tasksql))
				//$inserterror = 1;
			$inserterror = updateTask($taskid);
			//$taskupdatesql = "UPDATE tbl_workflow_task SET status = 1 WHERE task_id = $taskid";
			//if(!db_query($taskupdatesql))
				//$inserterror = 1;
			if($status == 11)
				$append .= " ,aggrement_date = CURDATE() ";
			$loanupdatesql = "UPDATE tbl_loan_detail SET loan_status = $status, agreement = '".$filename."',documents = '".$dfilename."' $append WHERE loan_docket = $docket";
			if(!db_query($loanupdatesql))
				$inserterror = 1;
			if($inserterror)
			{
				db_query('ROLLBACK');
				drupal_set_message("There is some error while updation.Please try again.");
			}else{
				drupal_set_message("Agreement paper for loan case ".getRegNumber(getLoanIdDocket($docket))." has been uploaded successfully.");
				db_query('COMMIT');
			}
			drupal_goto('loan/listloans');
		}
		
	
		else{
			form_set_error('report','Please upload file with extension .pdf,.zip.rar,doc,txt,docx,xls,ppt,xlsx,pptx for both fields');		
			$err .= '$("input[name=agreement]").addClass("error");';
			$err .= '$("input[name=documents]").addClass("error");';
			
		}
	}
}
$loan_id = getLoanIdDocket($docket);
if($err)
	{
	$output .= '<script>$(function() {'.$err.'});</script>';
	}
$output .= <<<EOD
	<div id="errorid" class="messages error" style="display:none;"></div>
	<div id="form-container">
	<form action="" name="agreementform" method="post" enctype="multipart/form-data" onSubmit="return agreementValidation();">
EOD;
		$output .= getLoanDetail($loan_id);
$output .= <<<EOD
	<br>
	<table width="100%" cellpadding="2" cellspacing="1" border="0" id="wrapper2">
	
	<tr class="oddrow">
	
		<td align="center" colspan=2><h2>Agreement Paper Upload</h2></td>   
	
	</tr>
	
	<tr class="evenrow">
		<td><div class="loantext1">Agreement Paper: <span title="This field is required." class="form-required">*</span></div>
		<div class="loanform"><div class='form-item'><input type="file" size="40" id="agreementid" class="form-file" name="agreement"/></div></div></td>
	</tr>
	<tr class="oddrow">
		<td><div class="loantext1">Loanee Documents: <span title="This field is required." class="form-required">*</span></div>
		<div class="loanform"><div class='form-item'><input type="file" size="40" id="documentid" class="form-file" name="documents"/><br />Please upload file with extension .pdf,zip,rar,doc,txt,docx,xls,ppt,xlsx,pptx </div></div></td>
	</tr>
	<tr class="evenrow"><td class="back" align="center">
	<input type="hidden" value="$level" name="level">
	<input type="hidden" value="$status" name="status">
	<input type="hidden" value="$docket" name="docket">
	<input type="hidden" value="$taskid" name="taskid">
	
EOD;
	$output .= l("Back",'loan/listloans/');
$output .= <<<EOD
	&nbsp;&nbsp;<input type="submit" class="form-submit" value="Save" id="submit" name="ls"/></table></form>
	</div>
EOD;
return $output;

}

function list_loan_accounts($pending = '')
{
	global $user;
	global $base_url;
	//$limit = 2;
	$limit = (int)getMessage( 'loans', 'code04', NULL);
	$breadcrumb = array();
	$breadcrumb[] = l('Home', '<front>');
	session_start();
	if(!isset($_SESSION['sstatus']))
		$_SESSION['sstatus'] = '0';
	if($pending)
	{
		$_SESSION['mycases'] = 1;
	}
  $header = array(
		array('data' => t('S. No.')),
        array('data' => t('Scheme Name'), 'field' => 'scheme_name', 'sort' => 'desc'),
        array('data' => t('Account No.'), 'field' => 'account_id', 'sort' => 'asc'),
        array('data' => t('Reg No.'), 'field' => 'reg_number', 'sort' => 'asc'),
        array('data' => t('Status'), 'field' => 'loan_status', 'sort' => 'asc'),
        array('data' => t('Loan Requirement'), 'field' => 'loan_requirement', 'sort' => 'asc'),
        array('data' => t('Application Date'), 'field' => 'application_date', 'sort' => 'desc'),
		array('data' => t('Action')),
	);
	
	if($array[0] == '' ) {
		$breadcrumb[] = l('List of Loan(s)', 'loan/listloans/'.$array[3].'');
	 } 
	  
	 drupal_set_breadcrumb($breadcrumb);
	$query = "SELECT loan_scheme_id, scheme_name FROM tbl_scheme_master";
	$res = db_query($query);
	while($row = db_fetch_object($res))
	{
		$schemearr[$row->loan_scheme_id] = $row->scheme_name;
	}
	$query = "SELECT lookup_id as lid, lookup_name as lname FROM tbl_lookups WHERE status = 1 ";
	$res = db_query($query);
	while($row = db_fetch_object($res))
	{
		$lookuparr[$row->lid] = $row->lname;
	}
	$query = "SELECT * FROM tbl_loan_detail ORDER BY application_date DESC";
	$res = db_query($query);
	while($row = db_fetch_object($res))
	{
		$mainschemearr[$row->schemeName_id] = $row->schemeName_name;
	}
	$query = "SELECT sector_id, sector_name FROM tbl_sectors WHERE status = 1";
	$res = db_query($query);
	while($row = db_fetch_object($res))
	{
		$sectorarr[$row->sector_id] = $row->sector_name;
	}


	$conditionstr = '';
	$role = getRole($user->uid);
	$corp_branch = getCorporationBranch($user->uid);
	if($corp_branch && ($role != 5 && $role != 6 && $role != 18 && $role != 19 && $role != 37))
	{
		$conditionstr = "AND wd.corp_branch = $corp_branch";
	}
	//if($corp_branch)
		//$conditionstr = "AND ld.corp_branch = $corp_branch";

	$mycases_selected = '';
	if($_SESSION['mycases'] == 1)
	{
		$pending = 1;
		$mycases_selected = "checked = 'checked'";
	}
	$lstatus = '';
	if($_SESSION['sstatus'] == 250)
		$lstatus = ' AND ld.loan_status < 8 ';
	if($_SESSION['sstatus'] == 251)
		$lstatus = ' AND (ld.loan_status >= 8 AND ld.loan_status != 9 AND ld.loan_status != 17 AND ld.loan_status != 15) ';
	if($_SESSION['sstatus'] == 252)
		$lstatus = ' AND ld.loan_status = 14';
	if($_SESSION['sstatus'] == 253)
		$lstatus = " AND (l.account_id != '' AND ld.o_disburse_amount != '0.00')";
	if($_SESSION['sstatus'] == 254)
		$lstatus = " AND (l.account_id != '' AND ld.o_disburse_amount = '0.00')";
	if($_SESSION['sstatus'] == 255)
		$lstatus = ' AND l.alr_status = 2';
	if($_SESSION['sstatus'] == 256)
		$lstatus = ' AND l.alr_status = 2';
	if($_SESSION['sstatus'] == 257)
		$lstatus = ' AND ld.loan_status = 0';
	if($_SESSION['sstatus'] == 278)
		$lstatus = ' AND !ld.bank_acc_no AND sm.loan_type = 147';
	if(isset($_REQUEST['searchtext']) && $_REQUEST['searchtext']!=''){
		$val = '%'.strtoupper($_REQUEST['searchtext']).'%'; 
		$val=addslashes($val);
		if($pending)
		{
			$query = "SELECT ld.*,l.account_id,wt.comment FROM tbl_workflow_task wt, tbl_workflow_docket wd, tbl_workflow w, tbl_loan_detail ld,tbl_loanee_detail l, tbl_workflow_details wdetail,tbl_scheme_master sm WHERE ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND wt.doc_id = wd.doc_id AND ld.loan_docket = wd.doc_id AND wd.workflow_id = w.workflow_id AND w.workflow_id = wdetail.workflow_id AND w.workflow_name = 'loan' AND wdetail.role = $role AND wdetail.level = wt.level AND wt.status = 0  AND (UPPER(sm.scheme_name) LIKE '%".$val."%' OR UPPER(ld.reg_number) LIKE '%".$val."%' OR UPPER(loan_requirement) LIKE '%".$val."%' OR UPPER(l.account_id) LIKE '%".$val."%' OR DATE_FORMAT(ld.application_date,'%%d%%m%%Y') LIKE '%".$val."%') $conditionstr $lstatus".tablesort_sql($header); 
			$sqlcount = "SELECT COUNT(*) AS count FROM tbl_workflow_task wt, tbl_workflow_docket wd, tbl_workflow w, tbl_loan_detail ld,tbl_loanee_detail l, tbl_workflow_details wdetail,tbl_scheme_master sm WHERE ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND wt.doc_id = wd.doc_id AND ld.loan_docket = wd.doc_id AND wd.workflow_id = w.workflow_id AND w.workflow_id = wdetail.workflow_id AND w.workflow_name = 'loan' AND wdetail.role = $role AND wdetail.level = wt.level AND wt.status = 0  AND (UPPER(sm.scheme_name) LIKE '%".$val."%' OR UPPER(ld.reg_number) LIKE '%".$val."%' OR UPPER(loan_requirement) LIKE '%".$val."%' OR UPPER(l.account_id) LIKE '%".$val."%' OR DATE_FORMAT(ld.application_date,'%%d%%m%%Y') LIKE '%".str_replace('-','',$val)."%') $conditionstr $lstatus".tablesort_sql($header); 
		}else{
			$query = "SELECT ld.*,l.account_id FROM tbl_loan_detail ld,tbl_loanee_detail l,tbl_scheme_master sm where ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND (UPPER(sm.scheme_name) LIKE '%".$val."%' OR UPPER(ld.reg_number) LIKE '%".$val."%' OR UPPER(loan_requirement) LIKE '%".$val."%' OR UPPER(account_id) LIKE '%".$val."%' OR UPPER(l.account_id) LIKE '%".$val."%' OR DATE_FORMAT(ld.application_date,'%%d%%m%%Y') LIKE '%".str_replace('-','',$val)."%') $conditionstr $lstatus".tablesort_sql($header);

			$sqlcount = "SELECT COUNT(*) AS count FROM tbl_loan_detail ld,tbl_loanee_detail l,tbl_scheme_master sm where ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND (UPPER(sm.scheme_name) LIKE '%".$val."%' OR UPPER(ld.reg_number) LIKE '%".$val."%' OR UPPER(loan_requirement) LIKE '%".$val."%' OR UPPER(account_id) LIKE '%".$val."%' OR UPPER(l.account_id) LIKE '%".$val."%' OR DATE_FORMAT(ld.application_date,'%%d-%%m-%%Y') LIKE '%".$val."%') $conditionstr $lstatus".tablesort_sql($header);
		}
		$rscount = db_query($sqlcount);
		$rscounter = db_fetch_object($rscount);

	}else{
		if($pending)
		{
			//$cuser = user_load($user->uid);
			//$roles = implode(',',array_flip($cuser->roles));
			$query = "SELECT ld.*,l.account_id,wt.comment FROM tbl_workflow_task wt, tbl_workflow_docket wd, tbl_workflow w, tbl_loan_detail ld,tbl_loanee_detail l, tbl_workflow_details wdetail,tbl_scheme_master sm where ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND wt.doc_id = wd.doc_id AND ld.loan_docket = wd.doc_id AND wd.workflow_id = w.workflow_id AND w.workflow_id = wdetail.workflow_id AND w.workflow_name = 'loan' AND wdetail.role = $role AND wdetail.level = wt.level AND wt.status = 0 $conditionstr $lstatus".tablesort_sql($header); 
			//$sqlcount = "SELECT COUNT(*) AS count FROM tbl_workflow_task wt, tbl_workflow_docket wd, tbl_workflow w, tbl_loan_detail ld,tbl_loanee_detail l, tbl_workflow_details wdetail WHERE l.reg_number = ld.reg_number AND wt.doc_id = wd.doc_id AND ld.loan_docket = wd.doc_id AND wd.workflow_id = w.workflow_id AND w.workflow_id = wdetail.workflow_id AND w.workflow_name = 'loan' AND wdetail.role = $role AND wdetail.level = wt.level AND wt.status = 0 $conditionstr $lstatus".tablesort_sql($header);
			//$rscount = db_query($sqlcount);
			//$rscounter = db_fetch_object($rscount);
		}else{
			//$query = "SELECT * FROM tbl_loan_detail ".tablesort_sql($header);
			$query = "SELECT ld.*,l.account_id FROM tbl_loan_detail ld,tbl_loanee_detail l,tbl_workflow_docket wd,tbl_scheme_master sm where ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND wd.doc_id = ld.loan_docket $conditionstr $lstatus".tablesort_sql($header);
			$sqlcount = "SELECT COUNT(*) AS count FROM tbl_loan_detail ld,tbl_loanee_detail l,tbl_workflow_docket wd,tbl_scheme_master sm where ld.scheme_name = sm.loan_scheme_id AND l.reg_number = ld.reg_number AND wd.doc_id = ld.loan_docket $conditionstr $lstatus".tablesort_sql($header);
			$rscount = db_query($sqlcount);
			$rscounter = db_fetch_object($rscount);
		}
	}
		//echo $query;exit;
	 
 $output = <<<EOD
 	<form method="post" action=""><table width="100%" border="0" cellspacing="1" cellpadding="1" id="wrapper">
	<tr><td colspan="3" class="searchrecord">
EOD;

	if((isset($_REQUEST['searchtext']) && $_REQUEST['searchtext']!='') || $lstatus){
		if($lstatus)
			$vall = '';
		else
			$vall = " | ".l('View All','loan/listloans');
		$output .= t(getMessage( 'loans', 'code03', array("0"=>$rscounter->count))).$vall;
	}
	
	$output .='</td><td colspan="3" class="tblHeaderRight"></td></tr>';
	
	$addurl = l(getMessage( 'loans', 'code10', NULL),"loan/applyloan");
   	$lising = getMessage( 'loans', 'code11', NULL);
		
	$output .='<tr><td colspan="3" class="tblHeaderLeft">'.$lising.'<span class="addrecord">'.$addurl.'</span></td><td colspan="3" class="tblHeaderRight">';
	
$output .= <<<EOD
<div>Search by status
<select name="statussearch" id='statussearchid' onchange="return setStatus('$base_url',this.value);"><option value='0'>All</option>
EOD;

		$sql = "SELECT l.lookup_id as lid, l.lookup_name as lname FROM tbl_lookuptypes lt,tbl_lookups l WHERE lt.lookupType_id = l.lookupType_id AND l.status = 1 AND lt.lookupType_name = 'Loan Status' ORDER BY l.lookup_name";
		$res = db_query($sql);
		while($row = db_fetch_object($res))
		{
			if($_SESSION['sstatus'] == $row->lid)
				$selected = 'selected="selected"';
			$output .= '<option value="'.$row->lid.'" '.$selected.'>'.ucwords($row->lname).'</option>';
			$selected = '';
		}

$output .= <<<EOD
</select>

EOD;
if($user->uid != 1)
{
	$output .= <<<EOD
<input type="checkbox" name="mycases" id="mycasesid" value="$user->uid" $mycases_selected onclick="return myCases('$base_url',this.value);"> &nbsp; My Cases
EOD;
}
	$output .= <<<EOD

</div>&nbsp;
EOD;
	$output .='<input type="text" name="searchtext" value="'.$_POST['searchtext'].'" />'. 
	'&nbsp;<input type="submit" name="search" value="Search" /></td>'.
	'</tr>'.
	'</table></form>';
	//echo $query.$limit;exit;
	$result = pager_query($query, $limit);

	if($_REQUEST['page']){
     $counter = $_REQUEST['page']*$limit;
	}else{
	 $counter = 0;
	}
	//$cuser = user_load($user->uid);
	//$roles = implode(',',array_flip($cuser->roles));
	$role = getRole($user->uid);
	$appendrole = "";
	if($role)
		$appendrole = "AND wdetail.role = $role";
	$sql = "SELECT id,status FROM tbl_loan_status_master";
	$loanstatusres = db_query($sql);
	while($row=db_fetch_object($loanstatusres)) {
		$loanstatus[$row->id] = $row->status;
	}
	$amount = getMessage('loans','DM_approval_loan_amount','');
	while($row=db_fetch_object($result)) {
		$queryforu = '';
		$counter++;
		$forwardurl = '';
		$appendurl = '';
		$disbursementurl = '';
		$repaymenturl = '';
		$editurl = '';
		$closeurl = '';
		$agreement = '';
		$bankediturl = '';
		$viewreporturl = '';
		$viewsletter = '';

		$obalance = ($row->o_principal + $row->o_interest + $row->o_LD + $row->o_other_charges) - $row->weaver;
		if(!$obalance || $row->loan_status == 9 || $row->loan_status == 17)
			$closeurl = ' | '.l("Close","loan/close_loan/".$row->loan_id);
		$query = "SELECT COUNT(*) FROM tbl_loan_comment WHERE commentedto = '".$role."' AND doc_id = $row->loan_docket AND status = 0 "; 
		$res = db_query($query);
		$commentcount = db_result($res);
		$commentcount_stmt = '';
		if($commentcount)
		{
			$commentcount_stmt = ' | '.l("( ".$commentcount." Pending comments )","loan/comments/".$row->loan_docket);
		}
		$pendingloansql = "SELECT DISTINCT(wt.level) as level,ld.loan_status as loan_status,ld.loan_docket as docket,wt.task_id,wt.comment FROM tbl_workflow_task wt, tbl_workflow_docket wd, tbl_workflow w, tbl_loan_detail ld, tbl_workflow_details wdetail WHERE wt.doc_id = wd.doc_id AND wd.workflow_id = w.workflow_id AND w.workflow_id = wdetail.workflow_id AND ld.loan_docket = wt.doc_id AND w.workflow_name = 'loan' $appendrole AND wdetail.level = wt.level AND wt.status = 0 AND wt.doc_id = ".$row->loan_docket; 
		$res = db_query($pendingloansql);
		$ploans = db_fetch_object($res);
		
		if($ploans->comment)
			$queryforu = '<br>(Query : '.$ploans->comment.')';
		
		
		$level = $ploans->level + 1;
		$querylevel = $ploans->level - 1; // FOR QUERY BUTTON
		$commenturl = ' | '.l("Comments","loan/comments/".$row->loan_docket).$commentcount_stmt;
		if(!isLoanSanctioned($row->loan_id))
			$editurl = ' | '.l("Edit","loan/editloan/".$row->loan_id);
		else
			$editurl = ' | '.l("Modify Guarantor Detail","loan/editloan/".$row->loan_id."/g");
		if($role == 17)
		{
			$editurl = '';
			$closeurl = '';
		}
		//if($brow->loan_type == 147)
			//$bankediturl = ' | '.l("Edit","loan/editloan/".$row->loan_id);
		$viewurl = l("View","loan/view/".$row->loan_id);
		if(($row->loan_status == 14 || $row->loan_status == 16) && $row->o_disburse_amount != '0.00')
			$disbursementurl = ' | '.l("Disburse","loan/disbursement/".$row->loan_id);
		//if($row->loan_status == 16 && $row->o_disburse_amount != '0.00')
			//$disbursementurl = ' | '.l("Disburse","loan/disbursement/".$row->loan_id);
		//if($row->loan_status == 14 || $row->loan_status == 16)
		if($row->account_id)
			$repaymenturl = ' | '.l('Repayment','loan/repayment/'.$row->loan_id);
			
		$bankq = "SELECT loan_type FROM tbl_scheme_master WHERE loan_scheme_id = '".$row->scheme_name."' LIMIT 1";
		$bres = db_query($bankq);
		$brow = db_fetch_object($bres);
		if($brow->loan_type == 147 && isLoanSanctioned($row->loan_id))
		{
			$bankediturl = ' | '.l("Edit","loan/editloan/".$row->loan_id);
			$forwardurl = '';
			$disbursementurl = '';
			$repaymenturl = '';
			$editurl = '';
			$closeurl = '';
			$commenturl = '';
			$agreement = '';
			$viewreporturl = '';
			$documents = '';
			$viewsletter = '';
		}
		if($row->application_report)
			$viewreporturl = ' | '.l("View Report","loan/downloadfile/".$row->application_report);
		if($row->agreement)
			$agreement = ' | '.l("Agreement Paper","loan/downloadfile/".$row->agreement);
		if($row->documents)
			$documents = ' | '.l("Documents","loan/downloadfile/".$row->documents);
		if($row->sletter)
			$viewsletter = ' | '.l("View Sanction Letter","loan/downloadfile/".$row->sletter);
		if($ploans->level)
		{
			$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/'.$ploans->loan_status.'/'.$ploans->docket.'/'.$ploans->task_id);
			$forwardGMurl = ' | '.l("Forward to GM","loan/forward/".($level + 1).'/'.$ploans->loan_status.'/'.$ploans->docket.'/'.$ploans->task_id);
			$sanctionletter = ' | '.l("Generate Sanction Letter","loan/generate_sanction_letter/".($ploans->level - 1).'/'.$ploans->loan_status.'/'.$ploans->docket.'/'.$ploans->task_id);
				//$viewsletter = ' | '.l("View Sanction Letter",$base_path."sites/default/files/loan/".$row->sletter);
			if($agreement)
				$stra = 'Upload new agreement papers';
			else
				$stra = 'Process Agreement';
			$processagreement = ' | '.l($stra,"loan/processagreement/".$level.'/11/'.$ploans->docket.'/'.$ploans->task_id);
			

			$sqlr = "SELECT ROI FROM tbl_loan_detail WHERE loan_docket = ".$ploans->docket;
			$res = db_query($sqlr);
			$ld = db_fetch_object($res);

			if($ploans->loan_status == 1 && $ploans->level == 1)
			{
				if($row->application_report)
					$rep = $row->application_report;
				else
					$rep = '0';
				$uploadreporturl = ' | '.l("Upload Report","loan/uploadreport/".$level.'/'.$ploans->loan_status.'/'.$ploans->docket.'/'.$ploans->task_id.'/'.$rep);
				if($ploans->comment)
					$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/1/'.$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $forwardurl.$uploadreporturl.$editurl;
			}
			
			if($ploans->loan_status == 2  && $ploans->level == 2)
			{
				if($ld->ROI == '0.00')
				{
					$forwardurl = ' | '.l("Add Loan Class","loan/addROI/".$ploans->docket);
				}else{
					if($ploans->comment)
					{
						$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/2/'.$ploans->docket.'/'.$ploans->task_id);
					}
				}
				$queryurl = ' | '.l("Query","loan/query/".$querylevel.'/'.($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				if($bankediturl)
					$appendurl = $forwardurl.$queryurl.$bankediturl;
				else
					$appendurl = $forwardurl.$queryurl.$editurl;
				if($row->loan_requirement <= $amount)
				{
					if($ld->ROI != '0.00')
					{
						$sanctionletterbydm = ' | '.l("Generate Sanction Letter","loan/generate_sanction_letter/".($ploans->level).'/16/'.$ploans->docket.'/'.$ploans->task_id);
						//$approveurl = ' | '.l("Approve","loan/approve_reject_application/16/".$ploans->docket.'/'.$ploans->task_id.'/0');
						//$rejecturl = ' | '.l("Reject","loan/approve_reject_application/17/".$ploans->docket.'/'.$ploans->task_id.'/0');
						$appendurl .= $approveurl.$rejecturl.$sanctionletterbydm;
					}
				}
			}
			if($ploans->loan_status == 3 && $ploans->level == 3)
			{
				if($ploans->comment)
					$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/3/'.$ploans->docket.'/'.$ploans->task_id);
				$queryurl = ' | '.l("Query","loan/query/".$querylevel.'/'.($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				$roiurl = ' | '.l("Modify Loan class","loan/addROI/".$ploans->docket);
				if($bankediturl)
					$appendurl = $forwardurl.$queryurl.$roiurl.$bankediturl;
				else
					$appendurl = $forwardurl.$queryurl.$roiurl.$editurl;
			}
			if($ploans->loan_status == 4 && $ploans->level == 4)
			{
				$queryurl = ' | '.l("Query","loan/query/".$querylevel.'/'.($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				if($ploans->comment)
				{
					$forward = ' | '.l("Forward","loan/forward/".($level - 1).'/2/'.$ploans->docket.'/'.$ploans->task_id);
					$appendurl = $queryurl.$forward.$editurl;
				}else{
					$appendurl = $sanctionletter.$queryurl.$editurl;
				}
			}
			
			if($ploans->loan_status == 5 && $ploans->level == 3)
			{
				if($ploans->comment)
					$forwardGMurl = ' | '.l("Forward to GM","loan/forward/".($level + 1).'/5/'.$ploans->docket.'/'.$ploans->task_id);
				$queryurl = ' | '.l("Query","loan/query/4/4/".$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $forwardGMurl.$queryurl.$editurl;
			}
			if($ploans->loan_status == 6 && $ploans->level == 5)
			{
				$appendurl = '';
				if($ploans->comment)
					$forwardurl = ' | '.l("Forward","loan/forward/6/6/".$ploans->docket.'/'.$ploans->task_id);
				$appendurl .= $forwardurl.$queryurl.$editurl;
			}
			if($ploans->loan_status == 7 && $ploans->level == 6)
			{
				$approveurl = ' | '.l("Approve","loan/approve_reject_application/8/".$ploans->docket.'/'.$ploans->task_id.'/2');
				$rejecturl = ' | '.l("Reject","loan/approve_reject_application/9/".$ploans->docket.'/'.$ploans->task_id.'/0');
				$queryurl = ' | '.l("Query","loan/query/".$querylevel.'/'.($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $approveurl.$rejecturl.$queryurl.$editurl;
			}
			if($ploans->loan_status == 8 && $ploans->level == 2)
			{
				$appendurl = '';
				if($ploans->loan_status == 8)
					$appendurl .= $processagreement;
				//$queryurl = ' | '.l("Query","loan/query/6/".($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				//$appendurl .= $queryurl;
				if($row->comment)
				{
					$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/10/'.$ploans->docket.'/'.$ploans->task_id);
					$appendurl .= $forwardurl;
				}
				$appendurl .= $editurl;
			}
			if($ploans->loan_status == 11 && $ploans->level == 3)
			{
				if($ploans->comment)
					$forwardGMurl = ' | '.l("Forward to GM","loan/forward/".($level + 1).'/11/'.$ploans->docket.'/'.$ploans->task_id);
				$queryurl = ' | '.l("Query","loan/query/2/8/".$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $forwardGMurl.$queryurl.$editurl;
			}
			if($ploans->loan_status == 12 && $ploans->level == 5)
			{
				if($ploans->comment)
					$forwardurl = ' | '.l("Forward","loan/forward/".$level.'/12/'.$ploans->docket.'/'.$ploans->task_id);
				$queryurl = ' | '.l("Query","loan/query/3/".($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $forwardurl.$queryurl.$editurl;
			}
			if($ploans->loan_status == 13 && $ploans->level == 6)
			{
				$approveurl = ' | '.l("Release Pament Order","loan/approve_reject_application/14/".$ploans->docket.'/'.$ploans->task_id.'/0');
				$rejecturl = ' | '.l("Reject","loan/approve_reject_application/15/".$ploans->docket.'/'.$ploans->task_id.'/0');
				$queryurl = ' | '.l("Query","loan/query/5/".($ploans->loan_status - 1).'/'.$ploans->docket.'/'.$ploans->task_id);
				$appendurl = $approveurl.$rejecturl.$queryurl.$editurl;
			}
		}
		if($row->loan_status == 0)
		{
			$loan_status = 'Closed';
			$actiontoshow = $viewurl;
		}else{
			$loan_status = $loanstatus[$row->loan_status];
			$actiontoshow = $viewurl.$appendurl.$commenturl.$disbursementurl.$repaymenturl.$closeurl.$viewreporturl.$agreement.$viewsletter.$documents;
		}
		if($queryforu)
		{
			$actiontoshow .= ' | '.l("View Query","loan/view_query/".$row->loan_id.'/'.$ploans->task_id);
		}
		if($brow->loan_type == 147 && isLoanSanctioned($row->loan_id))
		{
			$actiontoshow = $viewurl.$viewreporturl.$documents;
			if($role == 13 || $role == 18)
				$actiontoshow .= $bankediturl;
		}
		$rows[] = array(
			
			array('data' => $counter),
			array('data' => ucwords($schemearr[$row->scheme_name])),
			array('data' => $row->account_id),
			array('data' => $row->reg_number),
			array('data' => $loan_status,'title'=>$row->comment,'alt'=>$row->comment),
			array('data' => round($row->loan_requirement)),
			array('data' => date("d-m-Y",strtotime($row->application_date))),
			array('data' => $actiontoshow),
		);
	}
	if($rows== NULL)
		$header=NULL;
		
	if($counter < 1)
	{
		$output .= "<br><center><b>No Loan Cases To show.</b></center>";
	}else{
		$output .= theme_table($header,$rows, $attributes = array(), $caption = NULL);
		$output .= theme('pager', NULL, $limit,0 );
	}
  return $output;
  }



function scheme_delete($sid){
	$delstmt = "DELETE FROM tbl_scheme_class WHERE scheme_id = ".$sid;
	db_query($delstmt);
	$delstmt = "DELETE FROM tbl_scheme_master WHERE loan_scheme_id = ".$sid." AND active = 1";
	db_query($delstmt);
	drupal_goto('loan/listscheme');
}


function loan_cron()
{
	$dueday = getMessage( 'loans', 'dueday', NULL);
	$currentdate = date("Y-m-d");
	$sql = "select * from 
(
SELECT l.account_id,l.email,l.mobile,l.fname,l.lname,l.reg_number,ld.loan_disburse_date,ld.emi_amount,
period_diff(DATE_FORMAT(curdate(), '%Y%m'),DATE_FORMAT(ld.loan_disburse_date, '%Y%m')) as period,
period_diff(DATE_FORMAT(curdate(), '%Y%m'),DATE_FORMAT(ld.loan_disburse_date, '%Y%m')) 
 * ld.emi_amount as TotalPayment 	
FROM tbl_loan_detail ld,
tbl_loanee_detail l 
WHERE ld.reg_number = l.reg_number AND ld.loan_disburse_date != '0000-00-0'
) a
left outer join 
(
SELECT am.loanacc_id,sum(installment_paid) as totalPaid
FROM tbl_loan_amortisaton am
group by am.loanacc_id
) b
on a.account_id = b.loanacc_id
where a.TotalPayment > b.totalPaid";
$res = db_query();
while($r = db_fetch_object($ea))
{
	if(date("d") > $dueday)
	{
		if(date("m") == 12)
			$duedate = date("Y-m-d",mktime(0 ,0 ,0,date("m") + 1,$dueday,date("Y") + 1));
		else
			$duedate = date("Y-m-d",mktime(0 ,0 ,0,date("m") + 1,$dueday,date("Y")));
	}else{
		$duedate = date("Y").'-'.date("m").'-'.$dueday;
	}
	if($r->email)
	{
		$parameter = '';
		$to = $r->email;
		$name =  ucwords($r->fname.' '.$r->lname);
		$accountno = $r->account_id;
		$emi =  $r->emi_amount;
		$parameter = json_encode(array("$name","$duedate","$name","$accountno","$duedate","$emi"));
		createMail('installment_alert',$to,'',$parameter);
		customsendsms($l->mobile,getMessage( 'loans', 'loan_due_alert', array("0"=>$emi,"1"=>$duedate)));
	}
}
}