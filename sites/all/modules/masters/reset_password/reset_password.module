<?php
function reset_password_init() {
}


function reset_password_perm() {
	return array('edit reset_password','administer reset_password', 'create reset_password', 'view reset_password');
}

function reset_password_access($op, $node, $account) {
	if($op == 'update' || $op == 'delete') {
		if (user_access('edit reset_password', $account) ) {
			return TRUE;
		}
	}
	if (($op=='create') && ($op='list')) {
		return user_access('create reset_password', $account);
	}
	if (($op=='view') or ($op=='list')) {
		return user_access('view reset_password', $account);
	}
	
}

function reset_password_menu() {
	
	$items['scst/resetpassword'] = array(
									'title' => t('Change Password'),
									'description' => 'Allow user to Change Password',
									'type' => MENU_CALLBACK,
									'page callback' => 'reset_password',
									'access arguments' => array('administer reset_password'),			 
								  );
	return $items;
}

function reset_password(){
 return drupal_get_form('reset_password_form');
}
function reset_password_form() {
	$breadcrumb = array();
    $breadcrumb[] = l('Home', '<front>');
    $breadcrumb[] = l('DashBoard', 'node/211');
	drupal_set_breadcrumb($breadcrumb);
	
	$form['current_password'] = array(
	    '#type' =>'password',
		'#title' => t('Current Password'),
		'#required' => TRUE,
		'#default_value' =>'',
		'#maxlength' =>25,
		'#size' =>41,
	);
	
   $form['password'] = array(
	    '#type' =>'password',
		'#title' => t('Password'),
		'#required' => TRUE,
		'#default_value' =>'',
		'#maxlength' =>25,
		'#size' =>41,
	     '#id' => 'da_password', 
		 '#attributes' => array('onkeyup' => 'checkPassword()'), 
	     '#description' =>'<div id="test"></div>',
	);

	$form['confirm_password'] = array(
		'#type' =>'password',
		'#title' => t('Confirm Password'),
		'#required' => TRUE,
		'#default_value' =>'',
		'#maxlength' =>25,
		'#size' =>41,
		 '#description' =>'The Password contains, Must be at least 8 characters,
     Must contain at least one lower case letter, one upper case letter, one digit and one special character,
    Valid special characters are -   @#$%^&+=', 
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#default_value' => t('Save')
	);
	return $form;
}

function reset_password_form_validate($form, &$form_state) {
  	$breadcrumb = array();
    $breadcrumb[] = l('Home', '<front>');
    $breadcrumb[] = l('DashBoard', 'node/211');
	drupal_set_breadcrumb($breadcrumb);
  
  global $user;
  $user_id = $user->uid;
  $values = $form_state['values'];
  $current_password = $values['current_password'];
  $password = $values['password'];
  $confirm_password = $values['confirm_password'];
  custom_Password_validate_name($password,'password');
  $sql = "SELECT uid FROM users WHERE uid='$user_id' AND pass='".md5($current_password)."' ";
  $obj =  db_fetch_object(db_query($sql));
  $uid =  $obj->uid;
  
  if($uid!=$user_id){
   $message = getMessage('resetPassword', 'code02', NULL);
  	form_set_error('current_password', $message);
  }
  
  if(strcmp($password,$confirm_password)!=0){
   $message = getMessage('resetPassword', 'code03', NULL);
  	form_set_error('confirm_password', $message);
  }
  
  
}

function reset_password_form_submit($form, &$form_state) {
	global $user;
	
	$values = $form_state['values'];
    $password = $values['password'];
	$user_id = $user->uid;
	$name = $user->name;
	$createdon = time();
    $sql = "UPDATE users SET pass='".md5($password)."' where uid='$user_id'";
	db_query($sql);
	$message = getMessage('resetPassword', 'code01', array("0"=>$name));
	drupal_set_message($message);
	
	$mob=db_query("select mobile from {tbl_joinings} where program_uid='".$node->uid."'");
	$mobi=db_fetch_object($mob);
	$smsmobile=$mobi->mobile;
	$sms='91'.$smsmobile;
	
	$message2='Your password has been reset successfully.Please login for confirmation';
	customsendsms($sms,$message2);
	
	
	drupal_goto('scst/resetpassword');

}

function reset_password_theme() {
	return array(			 
			'reset_password_form' => array(
			'arguments' => array('form' => NULL),
			'template' => 'reset_password_form',
			),
	);
}


